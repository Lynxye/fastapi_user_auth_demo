[project]
name = ""
version = ""
description = ""
authors = [
    { name = "atomi", email = "1456417373@qq.com" },
]
dependencies = [
    "uvicorn>=0.18.3",
    "pydantic[dotenv]>=2.0.0",
    "pydantic-settings>=2.1.0",
    "aiosqlite>=0.15.0",
    "fastapi-user-auth<0.8.0,>=0.7.0",
    "fastapi-amis-admin-nav<0.2.0,>=0.1.3",
    "fastapi-scheduler<0.1.0,>=0.0.15",
    "sqlmodelx>=0.0.9",
    "alembic>=1.7.6",
]
requires-python = ">=3.8"
license = { text = "MIT" }
[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "pre-commit>=2.20.0",
]
[tool.pdm.scripts]
#_.env_file = "./backend/.env"
run = "faa run"
stop = "faa stop"
lint = "pre-commit run --all-files"


[tool.isort]
profile = "black"
atomic = true
filter_files = true

[tool.black]
line-length = 130
include = '\.pyi?$'


[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "E711", # sqlalchmey comparison
]
# Same as Black.
line-length = 130

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.pytest.ini_options]
minversion = "6.0"
python_files = [
    "test_*",
    "*_test"
]
# pytest-asyncio
asyncio_mode = "auto"